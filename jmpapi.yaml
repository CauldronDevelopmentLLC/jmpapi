options:
  http-addresses: [localhost:7000]
  https-addresses: [localhost:7100]
  http-root: ./http

  google-client-id: >-
    355813468645-o1e45s6ehjbl1bfv78o6pm6a89e3tasg.apps.googleusercontent.com
  google-client-secret: j4kljjWgk3Dazqqud87ckB1I
  google-redirect-base: https://localhost:7100

  db-name: jmpapi
  db-user: jmpapi
  db-pass: AgAgBim-knas6

  session-sql: CALL GetSession(%(id)s)

api:
  /api:
    GET:
      handler: api
      help: Returns a description of this API.

  /login/:provider:
    GET:
      handler: login
      redirect: /admin.html
      args:
        provider:
          optional: true
          enum: [list, google, facebook, github]
          help: The OAuth2 login provider.
      sql: >
        CALL Login(%(id)s, %(provider)s, %(provider_id)s, %(user)s, %(name)s,
          %(avatar)s)

  /logout:
    PUT:
      handler: logout
      sql: CALL Logout(%(id)s)
      help: Close the currently logged in session.

  /users:
    GET:
      return: list
      sql: >
        SELECT id, provider, provider_id, name, avatar, email, created,
          last_used FROM users
      help: Returns a list of all users.

  /users/:id:
    DELETE:
      allow: [$admin]
      return: ok
      sql: DELETE FROM users WHERE id = %(id)s
      help: Delete an existing user.
      args:
        id: {help: User ID}

  /users/:id/groups:
    GET:
      allow: [$admin]
      return: list
      sql: >
        SELECT g.name, COUNT(ug.uid) member FROM groups g
          LEFT JOIN user_groups ug ON ug.gid = g.id AND ug.uid = %(id)s
          GROUP BY g.name
      help: Get the list of groups with user membership.

  /users/:id/groups/:group:
    PUT:
      allow: [$admin]
      return: ok
      sql: >
        INSERT INTO user_groups (uid, gid)
          SELECT %(id)s, id FROM groups WHERE name = %(group)s
      help: Add a user to a group.

    DELETE:
      allow: [$admin]
      return: ok
      sql: >
        DELETE FROM user_groups
          WHERE uid = %(id)s AND gid IN
            (SELECT id FROM groups WHERE name = %(group)s)
      help: Remove a user from a group.

  /groups:
    GET:
      allow: [$admin]
      return: list
      sql: SELECT name FROM groups
      help: Returns the list of groups.

  /groups/:group:
    PUT:
      allow: [$admin]
      return: ok
      sql: INSERT INTO groups (name) VALUES (%(group)s)
      help: Create a new group.
      args:
        group: {help: The name of the new group.}

    DELETE:
      allow: [$admin]
      return: ok
      sql: DELETE FROM groups WHERE name = %(group)s AND name != 'admin'
      help: Delete a group.
      args:
        group: {help: The name of the group.}

  /groups/:group/users:
    GET:
      allow: [$admin]
      return: list
      sql: >
        SELECT uid id, provider, provider_id, u.name, avatar, created, last_used
          FROM user_groups ug
          JOIN groups g ON g.id = ug.gid AND g.name = %(group)s
          JOIN users u ON u.id = ug.uid
      help: Returns a list of users in a group.
