---
title: Authorization

help: >
  API Authorization endpoints allow for creating, modifying or deleting users
  and groups.  The login system uses OAuth2 and can support Google, Facebook,
  or GitHub as login providers.

endpoints:
  /login/:provider:
    GET:
      handler: login
      redirect: /admin.html
      args:
        provider:
          optional: true
          enum: [google, facebook, github, providers]
          help: The OAuth2 login provider.

      sql: >
        CALL jmpapi.AuthLogin(%(id)s, %(provider)s, %(user)s, %(name)s,
          %(avatar)s)

  /logout:
    PUT:
      handler: logout
      sql: CALL jmpapi.AuthLogout(%(id)s)
      help: Close the currently logged in session.

  /users:
    GET:
      allow: [$admin]
      return: list
      sql: CALL jmpapi.UserList()
      help: Returns a list of all users.

    POST:
      allow: [$admin]
      args:
        provider:
          enum: [google, facebook, github]
          help: The OAuth2 login provider.

        email:
          help: "The user's email address."

        name:
          help: "The user's name."

      sql: CALL jmpapi.UserAdd(%(provider)s, %(email)s, %(name)s)

  /users/:id:
    DELETE:
      allow: [$admin]
      return: ok
      sql: CALL jmpapi.UserDelete(%(id)u)
      help: Delete an existing user.
      args:
        id: {help: User ID}

  /users/:id/groups:
    GET:
      allow: [$admin]
      return: list
      sql: CALL jmpapi.UserGroupList(%(id)u)
      help: Get the list of groups with user membership.

  /users/:id/groups/:group:
    PUT:
      allow: [$admin]
      return: ok
      sql: CALL jmpapi.UserGroupAdd(%(id)u, %(group)s)
      help: Add a user to a group.

    DELETE:
      allow: [$admin]
      return: ok
      sql: CALL jmpapi.UserGroupDelete(%(id)u, %(group)s)
      help: Remove a user from a group.

  /groups:
    GET:
      allow: [$admin]
      return: list
      sql: CALL jmpapi.GroupList()
      help: Returns the list of groups.

  /groups/:group:
    args:
      group: {help: The group name.}

    PUT:
      allow: [$admin]
      return: ok
      sql: CALL jmpapi.GroupAdd(%(group)s)
      help: Create a new group.

    DELETE:
      allow: [$admin]
      return: ok
      sql: CALL jmpapi.GroupDelete(%(group)s)
      help: Delete a group.

  /groups/:group/members:
    GET:
      allow: [$admin]
      return: list
      sql: CALL jmpapi.GroupMemberList(%(group)s)
      help: Returns a list of members of a group.

  /groups/:group/nonmembers:
    GET:
      allow: [$admin]
      return: list
      sql: CALL jmpapi.GroupNonmemberList(%(group)s)
      help: Returns a list of nonmembers of a group.
